@model RealEstateNet.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
<div class="row mt40" id="socialLoginList">
    @foreach (AuthenticationDescription p in loginProviders)
    {
        if (p.AuthenticationType.Equals("Google"))
        {
            <div class="col-lg">
                <button type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account" class="btn btn2 btn-block color-white bgc-gogle mb0" style="background: #EA4335"><i class="fa fa-google float-left mt5"></i> @p.AuthenticationType</button>
            </div>
        }
        else
        {
            <div class="col-lg">
                <button type="submit" class="btn btn-block color-white bgc-fb mb0" style="background: #3B5998" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="fa fa-facebook float-left mt5"></i> @p.AuthenticationType</button>
            </div>
        }
    }
</div>
        }
    }
}
