@using RealEstateNet.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

    <section class="inner_page_breadcrumb">
        <div class="container">
            <div class="row">
                <div class="col-xl-6">
                    <div class="breadcrumb_content">
                        <h4 class="breadcrumb_title">Logın</h4>
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="../../">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Logın</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </section>

<section class="our-log bgc-fa">
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-lg-6 offset-lg-3">
                <div class="login_form inner_page">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                    <div class="heading">
                        <h3 class="text-center">Login to your account</h3>
                        <p class="text-center">
                            Don't have an account?
                            @Html.ActionLink("Sign up!", "Register")
                        </p>
                    </div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email Address" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group custom-control custom-checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "custom-control-input" })
                            @Html.LabelFor(m => m.RememberMe, new { @class = "custom-control-label" })
                            <a class="tdu btn-fpswd float-right" href="#">Forgot Password?</a>
                        </div>
                        <button type="submit" class="btn btn-log btn-block btn-thm2">Login</button>
                        <div class="divide">
                            <span class="lf_divider"></span>
                            <hr>
                        </div>
                        <div class="row mt40">
                            <div class="col-lg">
                                <button type="submit" class="btn btn-block color-white bgc-fb mb0" style="background: #3B5998"><i class="fa fa-facebook float-left mt5"></i> Facebook</button>
                            </div>
                            <div class="col-lg">
                                <button type="submit" class="btn btn2 btn-block color-white bgc-gogle mb0" style="background: #EA4335"><i class="fa fa-google float-left mt5"></i> Google</button>
                            </div>
                        </div>
                        @*<p>
                                @Html.ActionLink("Register as a new user", "Register")
                            </p>*@
                        @* Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>*@
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@*--External Login*@
@*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
